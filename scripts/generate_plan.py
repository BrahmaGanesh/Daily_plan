# scripts/generate_plan.py
import json
from datetime import date, timedelta

# 120 main topics for the plan (example placeholder content, replace as needed)
topics = [
    "Verilog syntax & coding guidelines",
    "Number systems, logic gates, FSMs",
    "SystemVerilog data types & interfaces",
    "SV OOP: classes & randomization",
    "SV Assertions & covergroups",
    "UVM env & basic agent",
    "UVM driver & monitor",
    "UVM sequences & factory",
    "Coverage metrics & reports",
    "Clock-domain crossing basics",
    "Verilog testbench architecture",
    "SV functional coverage deeper dive",
    "Coverpoint & cross coverage",
    "Assertions patterns & examples",
    "Protocol VIP introduction: APB",
    "Protocol VIP project: I2C",
    "Protocol VIP project: SPI",
    "Protocol VIP project: UART",
    "AHB protocol verification project",
    "AXI4-Lite protocol verification project",
    "Ethernet MAC project overview",
    "USB 2.0 controller verification",
    "DDR controller verification",
    "PCIe Gen3 endpoint verification",
    "UVM Register Abstraction Layer (RAL)",
    "Scoreboard & reference model construction",
    "Constraint randomization scenarios",
    "Debugging & waveform analysis basics",
    "Formal verification introduction",
    "Low-power verification fundamentals",
    "Python basics: syntax & scripting",
    "Python file IO & log parsing",
    "Python + SystemVerilog hybrid flow demo",
    "Automate testbench tasks with Python",
    "GitHub portfolio setup and management",
    "LinkedIn weekly progress post #1",
    "Multi-master bus verification project",
    "Cache controller verification project",
    "Interrupt controller verification project",
    "DMA engine verification project",
    "Video codec engine verification project",
    "Cryptographic accelerator verification",
    "Open-source UVM/Python utility project",
    "Practice Q&A: functional vs code coverage",
    "Practice Q&A: race conditions in SystemVerilog",
    "Practice Q&A: how to write a scoreboard",
    "Practice Q&A: UVM phases overview",
    "Practice Q&A: SystemVerilog randomization traps",
    "Practice Q&A: CDC verification methods",
    "Practice Q&A: protocol handshake sequencing",
    "GitHub commit & LinkedIn post #2",
    "SoC integration testbench project",
    "Low-power handshake protocol",
    "AXI4 full protocol verification",
    "RISC-V bus functional model",
    "Industry networking strategy #1",
    "Mock interview session #1",
    "Aptitude practice session #1",
    "English: self-introduction practice",
    "English: project explanation practice",
    "RISC-V core verification project ðŸŒŸ",
    "RISC-V custom ISA extension project ðŸŒŸ",
    "AI-accelerator memory controller with Python project ðŸŒŸ",
    "Formal PCIe Gen4 verification framework ðŸŒŸ",
    "Network switch testbench project",
    "High-speed SerDes verification",
    "Multicore cache coherency verification",
    "Video SoC verification project",
    "Power-domain crossing testbench",
    "UVM portable stimulus introduction",
    "SystemC/TLM basics",
    "Practice Q&A: formal vs simulation verification",
    "Practice Q&A: UVM factory overrides",
    "Practice Q&A: backdoor vs frontdoor access",
    "Practice Q&A: scoreboard edge cases",
    "Practice Q&A: coverage closure strategies",
    "GitHub commit & LinkedIn post #3",
    "Mock interview session #2",
    "Aptitude practice session #2",
    "English: debug explanation practice",
    "Industry networking strategy #2",
    "USB 3.0 protocol testbench project",
    "DDR4 PHY verification project",
    "PCIe Gen4 switch verification project",
    "Ethernet 10G MAC verification",
    "AI accelerator SoC testbench",
    "RISC-V DV flow integration",
    "UVM VIP development",
    "Metrics & reporting automation tool",
    "System-level regression suite",
    "Mock interview session #3",
    "Mock interview session #4",
    "Resume final polish",
    "GitHub portfolio final push",
    "LinkedIn weekly progress post #4",
    "Job applications batch #1",
    "Job applications batch #2",
    "Job applications batch #3",
    "Follow-up communication strategy",
    "Aptitude practice session #3",
    "English interview Q&A practice",
    "Live problem solving practice",
    "Bug hunt and debug scenarios",
    "Protocol debug deep dive",
    "GitHub commit & LinkedIn post #5",
    "Industry networking strategy #3",
    "Final SoC smoke test project",
    "Final regression coverage analysis",
    "VIP upgrade project",
    "Automation suite enhancement",
    "Design review documentation",
    "Performance metrics evaluation",
    "Backup topic review & catch-up",
    "Mock hackathon/coding test event",
    "Mock on-site interview simulation",
    "Final English communication prep",
    "Final aptitude preparation",
    "Final system-level Q&A",
    "Overall final review",
    "Relaxation and confidence building",
    "Graduation day: readiness check",
    "Celebrate your accomplishment"
]

# Corresponding sub-topics (examples; must be length 120)
sub1 = [
    "Verilog coding style",
    "Combinational logic review",
    "SV data types & interfaces",
    "OOP basics in SV",
    "Assertions: basics and syntax",
    "UVM env structure",
    "Drivers & monitors",
    "Sequences & factories",
    "Coverage metrics",
    "Clock-domain crossing concepts",
    "Testbench organization",
    "Functional coverage deep dive",
    "Coverpoints",
    "Assertions examples",
    "APB protocol intro",
    "I2C protocol project",
    "SPI protocol project",
    "UART protocol project",
    "AHB bus basics",
    "AXI4-Lite protocol",
    "Ethernet MAC overview",
    "USB 2.0 protocol",
    "DDR controller basics",
    "PCIe Gen3 intro",
    "UVM RAL concepts",
    "Scoreboard design",
    "Random constraint writing",
    "Debugging basics",
    "Formal verification intro",
    "Low-power techniques",
    "Python syntax",
    "File I/O in Python",
    "Python + SV integration",
    "Automation scripting",
    "GitHub setup",
    "LinkedIn share #1",
    "Multi-master bus",
    "Cache controller",
    "Interrupt controller",
    "DMA engine",
    "Video codec engine",
    "Crypto accelerator",
    "Open-source Utils",
    "Functional vs code coverage",
    "Race conditions in SV",
    "Scoreboard construction",
    "UVM phase overview",
    "Randomization traps",
    "CDC verification",
    "Protocol handshake",
    "LinkedIn share #2",
    "SoC integration",
    "Low-power handshake",
    "AXI full protocol",
    "RISC-V bus model",
    "Networking #1",
    "Mock interview #1",
    "Aptitude #1",
    "Self-intro English",
    "Project explanation",
    "RISC-V core ðŸŒŸ",
    "Custom ISA extension ðŸŒŸ",
    "AI memctrl w/Python ðŸŒŸ",
    "Formal PCIe Gen4 ðŸŒŸ",
    "Network switch TB",
    "SerDes verification",
    "Cache coherency",
    "Video SoC",
    "Power domain crossing",
    "Portable stimulus intro",
    "SystemC TLM",
    "Formal vs simulation",
    "Factory overrides",
    "Backdoor access",
    "Scoreboard edges",
    "Coverage closure",
    "LinkedIn share #3",
    "Mock interview #2",
    "Aptitude #2",
    "Debug explanation",
    "Networking #2",
    "USB3 protocol TB",
    "DDR4 PHY",
    "PCIe Gen4 switch",
    "10G Ethernet MAC",
    "AI SoC TB",
    "RISC-V DV flow",
    "UVM VIP dev",
    "Reporting tool",
    "Regression suite",
    "Mock interview #3",
    "Mock interview #4",
    "Resume polish",
    "GitHub final push",
    "LinkedIn share #4",
    "Job app batch #1",
    "Job app batch #2",
    "Job app batch #3",
    "Follow-up strategy",
    "Aptitude #3",
    "English interview Q&A",
    "Live problem solving",
    "Bug hunt",
    "Protocol debug",
    "LinkedIn share #5",
    "Networking #3",
    "SoC smoke test",
    "Regression coverage",
    "VIP upgrade",
    "Automation suite",
    "Design doc",
    "Performance metrics",
    "Backup review",
    "Mock hackathon",
    "Mock on-site",
    "English prep",
    "Aptitude prep",
    "Sys-level Q&A",
    "Final review",
    "Relax & confidence",
    "Graduation",
    "Celebrate!"
]

time1 = [
    "1h 30m", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h",
    "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h",
    "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h",
    "1h", "1h", "1h", "1h", "0.5h", "0.5h", "2h", "1h", "1h", "1h",
    "1h", "1h", "1h", "1h", "0.5h", "0.5h", "0.5h", "0.5h", "0.5h", "0.5h",
    "0.5h", "0.5h", "1h", "1h", "1h", "1h", "1h", "0.5h", "1h", "1h",
    "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h",
    "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h",
    "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h",
    "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h",
    "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h",
    "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h"
]

sub2 = [
    "Module hierarchy",
    "Sequential circuits deep-dive",
    "Interfaces & packages",
    "Random constraints",
    "Covergroups advanced",
    "UVM agents interaction",
    "Scoreboard basics",
    "Sequence variants",
    "Coverage closure",
    "Clock-domain crossing verification",
    "Testbench layers",
    "Functional coverage analysis",
    "Cross coverage",
    "Advanced assertion techniques",
    "APB protocol signals",
    "I2C multi-master",
    "SPI burst transfer",
    "UART parity handling",
    "AHB bus bridge",
    "AXI4 full protocol",
    "Ethernet framing",
    "USB endpoint",
    "DDR controller timing",
    "PCIe Gen3 lanes",
    "Register modeling",
    "Reference models",
    "Constrained random coverage",
    "Waveform debugging",
    "Formal properties",
    "Power gating",
    "Python loops & functions",
    "Log file parsing",
    "SV integration scripting",
    "Automation pipelines",
    "Portfolio publishing",
    "Weekly posting",
    "Bus arbitration",
    "Cache MSM",
    "Interrupt prioritization",
    "DMA burst transfers",
    "Video decompression",
    "Crypto algorithms",
    "Public repo contributions",
    "Coverage analysis tools",
    "Race conditions debugging",
    "Scoreboard refinement",
    "Phases & schedules",
    "Random seed control",
    "CDC tests",
    "Handshake protocols",
    "Weekly updates",
    "SoC verification",
    "Power domain handshake",
    "AXI burst transfers",
    "RISC-V packet formats",
    "LinkedIn connections",
    "Interview mockups",
    "Quantitative aptitude",
    "Storytelling skills",
    "Presentation practice",
    "RISC-V custom instructions",
    "Custom ISA debugging",
    "Python automation frameworks",
    "PCIe Gen4 formal checks",
    "Switch packet routing",
    "SerDes signal integrity",
    "Cache coherence protocols",
    "Video encoding verification",
    "Power domain verification",
    "Portable stimulus scripts",
    "Transaction level modeling",
    "Simulation verification",
    "Factory patterns",
    "Backdoor access techniques",
    "Scoreboard race conditions",
    "Closure strategies",
    "Updates sharing",
    "Interview technicals",
    "Aptitude drills",
    "Debugging sessions",
    "Networking activities",
    "USB3 data lanes",
    "DDR PHY calibration",
    "Switch crossbar policies",
    "Ethernet 10G PHY",
    "AI accelerator integration",
    "RISC-V flow improvements",
    "VIP extensions",
    "Metrics dashboards",
    "Regression workflows",
    "Mock interviews continued",
    "HR rounds practice",
    "Resume optimization",
    "GitHub branding",
    "LinkedIn job search",
    "Application tracking",
    "Follow-up emails",
    "Aptitude revision",
    "Interview Q&A",
    "Live coding problems",
    "Bug bounties & fixes",
    "Protocol tracing",
    "Weekly reports",
    "Industry contacts",
    "Final system tests",
    "Regression coverage",
    "VIP polish",
    "Automation tuning",
    "Design docs",
    "Performance baseline",
    "Topic revision",
    "Hackathon prep",
    "Mock site interviews",
    "Communication drills",
    "Final aptitude",
    "System Q&A",
    "Overall review",
    "Relax & focus",
    "Job readiness",
    "Celebrate success"
]

time2 = [
    "1h 30m", "2h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h",
    "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h",
    "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h",
    "1h", "1h", "1h", "1h", "0.5h", "0.5h", "1h", "1h", "1h", "1h",
    "1h", "1h", "1h", "1h", "0.5h", "0.5h", "0.5h", "0.5h", "0.5h", "0.5h",
    "0.5h", "0.5h", "1h", "1h", "1h", "1h", "1h", "0.5h", "1h", "1h",
    "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h",
    "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h",
    "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h",
    "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h",
    "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h",
    "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h", "1h"
]

start = date(2025, 7, 28)
plan = []

for i in range(120):
    d = start + timedelta(days=i)
    plan.append({
        "date": d.isoformat(),
        "topic": topics[i],
        "duration": "3 hrs",
        "sub1": sub1[i],
        "time1": time1[i],
        "sub2": sub2[i],
        "time2": time2[i],
        "completed": False
    })

with open("data/plan.json", "w") as f:
    json.dump(plan, f, indent=2)

print("Generated 120-day plan at data/plan.json")
